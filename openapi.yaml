openapi: 3.0.1
info:
  title: Zora
  description: 'Zora server'
  version: 1.0.0
servers:
  - url: https://zora-hml.undistro.io/api/v1
tags:
  - name: cluster
    description: Everything about Clusters
paths:
  /clusters:
    get:
      tags:
        - cluster
      summary: List clusters, not including their issues
      operationId: listClusters
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClusterItem'
        500:
          description: Internal Server Error
          content: {}
  /namespaces/{namespace}/clusters/{clusterName}:
    get:
      tags:
        - cluster
      summary: Get a cluster and its issues
      operationId: getCluster
      parameters:
        - in: path
          name: namespace
          schema:
            type: string
            example: clusters-prd
          required: true
        - in: path
          name: clusterName
          schema:
            type: string
            example: mycluster
          required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cluster'
        404:
          description: Not Found
          content: {}
        500:
          description: Internal Server Error
          content: {}
  /issues:
    get:
      tags:
        - cluster
      summary: List Issues
      operationId: listIssues
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Issue'
        500:
          description: Internal Server Error
          content: {}
components:
  schemas:
    Cluster:
      allOf:
        - $ref: '#/components/schemas/ClusterItem'
    ClusterItem:
      type: object
      properties:
        name:
          type: string
          example: mycluster
        namespace:
          type: string
          example: clusters-prd
        environment:
          type: string
          example: prod
        provider:
          type: string
          example: aws
        region:
          type: string
          example: v1.21.5-eks-bc4871b
        totalNodes:
          type: integer
          minimum: 0
          example: 178
        connection:
          type: object
          properties:
            connected:
              type: boolean
              example: false
            message:
              type: string
              example: 'the server has asked for the client to provide credentials'
        version:
          type: string
          example: v1.21.5-eks-bc4871b
        creationTimestamp:
          type: string
          format: date-time
          example: "2022-03-17T19:45:07Z"
        totalIssues:
          type: integer
          minimum: 0
          example: 4
        pluginStatus:
          type: object
          properties:
            issueCount:
              type: integer
              example: 2
            issues:
              type: array
              items:
                $ref: '#/components/schemas/ResourcedIssue'
            scan:
              type: object
              properties:
                status:
                  type: string
                  enum: [failed, unknown, scanned]
                  example: unknown
                message:
                  type: string
                  example: 'no finished scan yet'
            lastSuccessfulScanTime:
              type: string
              format: date-time
              example: "2022-06-14T17:30:11Z"
            lastFinishedScanTime:
              type: string
              format: date-time
              example: "2022-06-14T17:30:11Z"
            nextScheduleScanTime:
              type: string
              format: date-time
              example: "2022-06-14T17:33:00Z"
            resources:
             $ref: '#/components/schemas/Resources'
          example:
            kubescape:
              scan:
                status: "scanned"
                message: ""
              issueCount: 30
              issues: null
              lastSuccessfulScanTime: "2022-08-04T21:47:00Z"
              lastFinishedScanTime: "2022-08-04T21:47:00Z"
              nextScheduleScanTime: "2022-08-04T23:45:00Z"
            popeye:
              scan:
                status: "scanned"
                message: ""
              issueCount: 32
              issues: null
              lastSuccessfulScanTime: "2022-08-04T21:47:00Z"
              lastFinishedScanTime: "2022-08-04T21:47:00Z"
              nextScheduleScanTime: "2022-08-04T23:45:00Z"
    Resources:
      type: object
      properties:
        discovered:
          type: boolean
          example: false
        message:
          type: string
          example: "metrics API not available"
        memory:
          $ref: '#/components/schemas/Resource'
        cpu:
          $ref: '#/components/schemas/Resource'
    Resource:
      type: object
      properties:
        available:
          type: string
          example: '10033Mi'
        usage:
          type: string
          example: '3363Mi'
        usagePercentage:
          type: integer
          minimum: 0
          maximum: 100
          example: 33
    BaseIssue:
      type: object
      properties:
        id:
          type: string
          example: "POP-106"
        message:
          type: string
          example: "No resources requests/limits defined"
        category:
          type: string
          example: "Container"
        severity:
          type: string
          example: "Medium"
        plugin:
          type: string
          example: "popeye"
        url:
          type: string
          example: "https://kubernetes.io/docs/concepts/overview/working-with-objects/labels"
        original:
          type: object
          properties:
            message:
              type: string
              example: "No resources requests/limits defined"
            category:
              type: string
              example: "Container"
            severity:
              type: string
              example: "Medium"
    ClusterIssue:
      allOf:
        - $ref: '#/components/schemas/BaseIssue'
        - type: object
          properties:
            resources:
              type: object
              additionalProperties:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                      example: "aws-node"
                    namespace:
                      type: string
                      example: "kube-system"
                example:
                  - 'name': 'kube-proxy'
                    'namespace': 'kube-system'
                  - 'name': 'aws-node'
                    'namespace': 'kube-system'
              example:
                'apps/v1/daemonsets':
                  - 'name': 'kube-proxy'
                    'namespace': 'kube-system'
                  - 'name': 'aws-node'
                    'namespace': 'kube-system'
                'apps/v1/deployments':
                  - 'name': 'ingress-nginx-controller'
                    'namespace': 'undistro-system'
                'v1/pods':
                  - 'name': 'ingress-nginx-controller-75759597f9-zkpth'
                    'namespace': 'undistro-system'
                  - 'name': 'kube-proxy-f287p'
                    'namespace': 'kube-system'
                  - 'name': 'kube-proxy-s67tv'
                    'namespace': 'kube-system'
                  - 'name': 'aws-node-5qb87'
                    'namespace': 'kube-system'
                  - 'name': 'aws-node-xls4r'
                    'namespace': 'kube-system'
    Issue:
      allOf:
        - $ref: '#/components/schemas/BaseIssue'
        - type: object
          properties:
            clusters:
              type: array
              items:
                type: object
                properties:
                  name:
                    type: string
                    example: mycluster
                  namespace:
                    type: string
                    example: clusters-prd
                  totalResources:
                    type: integer
                    example: 10
