// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/undistro/zora/api/zora/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ClusterScanLister helps list ClusterScans.
// All objects returned here must be treated as read-only.
type ClusterScanLister interface {
	// List lists all ClusterScans in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.ClusterScan, err error)
	// ClusterScans returns an object that can list and get ClusterScans.
	ClusterScans(namespace string) ClusterScanNamespaceLister
	ClusterScanListerExpansion
}

// clusterScanLister implements the ClusterScanLister interface.
type clusterScanLister struct {
	indexer cache.Indexer
}

// NewClusterScanLister returns a new ClusterScanLister.
func NewClusterScanLister(indexer cache.Indexer) ClusterScanLister {
	return &clusterScanLister{indexer: indexer}
}

// List lists all ClusterScans in the indexer.
func (s *clusterScanLister) List(selector labels.Selector) (ret []*v1alpha1.ClusterScan, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ClusterScan))
	})
	return ret, err
}

// ClusterScans returns an object that can list and get ClusterScans.
func (s *clusterScanLister) ClusterScans(namespace string) ClusterScanNamespaceLister {
	return clusterScanNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ClusterScanNamespaceLister helps list and get ClusterScans.
// All objects returned here must be treated as read-only.
type ClusterScanNamespaceLister interface {
	// List lists all ClusterScans in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.ClusterScan, err error)
	// Get retrieves the ClusterScan from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.ClusterScan, error)
	ClusterScanNamespaceListerExpansion
}

// clusterScanNamespaceLister implements the ClusterScanNamespaceLister
// interface.
type clusterScanNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ClusterScans in the indexer for a given namespace.
func (s clusterScanNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.ClusterScan, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ClusterScan))
	})
	return ret, err
}

// Get retrieves the ClusterScan from the indexer for a given namespace and name.
func (s clusterScanNamespaceLister) Get(name string) (*v1alpha1.ClusterScan, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("clusterscan"), name)
	}
	return obj.(*v1alpha1.ClusterScan), nil
}
