//go:build !ignore_autogenerated
// +build !ignore_autogenerated

// Copyright 2022 Undistro Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import ()

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Cluster) DeepCopyInto(out *Cluster) {
	*out = *in
	out.NsName = in.NsName
	if in.TotalNodes != nil {
		in, out := &in.TotalNodes, &out.TotalNodes
		*out = new(int)
		**out = **in
	}
	if in.Connection != nil {
		in, out := &in.Connection, &out.Connection
		*out = new(ConnectionStatus)
		**out = **in
	}
	if in.Resources != nil {
		in, out := &in.Resources, &out.Resources
		*out = new(Resources)
		(*in).DeepCopyInto(*out)
	}
	in.CreationTimestamp.DeepCopyInto(&out.CreationTimestamp)
	if in.TotalIssues != nil {
		in, out := &in.TotalIssues, &out.TotalIssues
		*out = new(int)
		**out = **in
	}
	if in.PluginStatus != nil {
		in, out := &in.PluginStatus, &out.PluginStatus
		*out = make(map[string]*PluginStatus, len(*in))
		for key, val := range *in {
			var outVal *PluginStatus
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(PluginStatus)
				(*in).DeepCopyInto(*out)
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Cluster.
func (in *Cluster) DeepCopy() *Cluster {
	if in == nil {
		return nil
	}
	out := new(Cluster)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterReference) DeepCopyInto(out *ClusterReference) {
	*out = *in
	out.NsName = in.NsName
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterReference.
func (in *ClusterReference) DeepCopy() *ClusterReference {
	if in == nil {
		return nil
	}
	out := new(ClusterReference)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionStatus) DeepCopyInto(out *ConnectionStatus) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionStatus.
func (in *ConnectionStatus) DeepCopy() *ConnectionStatus {
	if in == nil {
		return nil
	}
	out := new(ConnectionStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Issue) DeepCopyInto(out *Issue) {
	*out = *in
	if in.Clusters != nil {
		in, out := &in.Clusters, &out.Clusters
		*out = make([]ClusterReference, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Issue.
func (in *Issue) DeepCopy() *Issue {
	if in == nil {
		return nil
	}
	out := new(Issue)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NsName) DeepCopyInto(out *NsName) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NsName.
func (in *NsName) DeepCopy() *NsName {
	if in == nil {
		return nil
	}
	out := new(NsName)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PluginStatus) DeepCopyInto(out *PluginStatus) {
	*out = *in
	if in.Scan != nil {
		in, out := &in.Scan, &out.Scan
		*out = new(ScanStatus)
		**out = **in
	}
	if in.IssueCount != nil {
		in, out := &in.IssueCount, &out.IssueCount
		*out = new(int)
		**out = **in
	}
	if in.Issues != nil {
		in, out := &in.Issues, &out.Issues
		*out = make([]ResourcedIssue, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LastSuccessfulScanTime != nil {
		in, out := &in.LastSuccessfulScanTime, &out.LastSuccessfulScanTime
		*out = (*in).DeepCopy()
	}
	if in.LastFinishedScanTime != nil {
		in, out := &in.LastFinishedScanTime, &out.LastFinishedScanTime
		*out = (*in).DeepCopy()
	}
	if in.NextScheduleScanTime != nil {
		in, out := &in.NextScheduleScanTime, &out.NextScheduleScanTime
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PluginStatus.
func (in *PluginStatus) DeepCopy() *PluginStatus {
	if in == nil {
		return nil
	}
	out := new(PluginStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Resource) DeepCopyInto(out *Resource) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Resource.
func (in *Resource) DeepCopy() *Resource {
	if in == nil {
		return nil
	}
	out := new(Resource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourcedIssue) DeepCopyInto(out *ResourcedIssue) {
	*out = *in
	in.Issue.DeepCopyInto(&out.Issue)
	if in.Resources != nil {
		in, out := &in.Resources, &out.Resources
		*out = make(map[string][]NsName, len(*in))
		for key, val := range *in {
			var outVal []NsName
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = make([]NsName, len(*in))
				copy(*out, *in)
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourcedIssue.
func (in *ResourcedIssue) DeepCopy() *ResourcedIssue {
	if in == nil {
		return nil
	}
	out := new(ResourcedIssue)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Resources) DeepCopyInto(out *Resources) {
	*out = *in
	if in.Memory != nil {
		in, out := &in.Memory, &out.Memory
		*out = new(Resource)
		**out = **in
	}
	if in.CPU != nil {
		in, out := &in.CPU, &out.CPU
		*out = new(Resource)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Resources.
func (in *Resources) DeepCopy() *Resources {
	if in == nil {
		return nil
	}
	out := new(Resources)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScanStatus) DeepCopyInto(out *ScanStatus) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScanStatus.
func (in *ScanStatus) DeepCopy() *ScanStatus {
	if in == nil {
		return nil
	}
	out := new(ScanStatus)
	in.DeepCopyInto(out)
	return out
}
